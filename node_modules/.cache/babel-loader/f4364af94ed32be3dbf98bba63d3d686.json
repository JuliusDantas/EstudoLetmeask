{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nlw\\\\letmeask\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { Home } from '../src/pages/Home';\nimport { NewRoom } from './pages/NewRoom';\nimport { auth, firebase } from './services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext({});\n\nfunction App() {\n  _s();\n\n  const [user, setUser] = useState();\n\n  function signInWhithGoogle() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider).then(result => {\n      if (result.user) {\n        const {\n          displayName,\n          photoUrl,\n          uid\n        } = result.user;\n\n        if (!displayName || !photoUrl) {\n          throw new Error('Missing information from google acount.');\n        }\n\n        setUser({\n          id: uid,\n          name: displayName,\n          avatarUrl: photoUrl\n        });\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        value,\n        setValue\n      },\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/rooms/new\",\n        component: NewRoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kGLk6m4BT90iK1d91zRYm0C2usk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Nlw/letmeask/src/App.tsx"],"names":["createContext","useState","BrowserRouter","Route","Home","NewRoom","auth","firebase","AuthContext","App","user","setUser","signInWhithGoogle","provider","GoogleAuthProvider","signInWithPopup","then","result","displayName","photoUrl","uid","Error","id","name","avatarUrl","value","setValue"],"mappings":";;;AAAA,SAAQA,aAAR,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AAEA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;;AAEA,OAAO,MAAMC,WAAW,gBAAGR,aAAa,CAAC,EAAD,CAAjC;;AAGP,SAASS,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;;AAEA,WAASW,iBAAT,GAA6B;AACvB,UAAMC,QAAQ,GAAG,IAAIN,QAAQ,CAACD,IAAT,CAAcQ,kBAAlB,EAAjB;AAEAR,IAAAA,IAAI,CAACS,eAAL,CAAqBF,QAArB,EAA+BG,IAA/B,CAAoCC,MAAM,IAAI;AAC5C,UAAGA,MAAM,CAACP,IAAV,EAAgB;AACd,cAAM;AAAEQ,UAAAA,WAAF;AAAeC,UAAAA,QAAf;AAAyBC,UAAAA;AAAzB,YAAiCH,MAAM,CAACP,IAA9C;;AAEA,YAAG,CAACQ,WAAD,IAAgB,CAACC,QAApB,EAA8B;AAC5B,gBAAM,IAAIE,KAAJ,CAAU,yCAAV,CAAN;AACD;;AAEDV,QAAAA,OAAO,CAAC;AACNW,UAAAA,EAAE,EAACF,GADG;AAENG,UAAAA,IAAI,EAACL,WAFC;AAGNM,UAAAA,SAAS,EAACL;AAHJ,SAAD,CAAP;AAMD;AACF,KAfD;AAgBL;;AAED,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAA7B;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAEtB;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,YAAZ;AAAyB,QAAA,SAAS,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAhCQI,G;;KAAAA,G;AAkCT,eAAeA,GAAf","sourcesContent":["import {createContext, useState} from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n\nimport {Home} from '../src/pages/Home'\nimport { NewRoom } from './pages/NewRoom';\n\nimport { auth, firebase } from './services/firebase'\n\nexport const AuthContext = createContext({} as any);\n\n\nfunction App() {\n  const [user, setUser] = useState();\n\n  function signInWhithGoogle() {\n        const provider = new firebase.auth.GoogleAuthProvider();\n\n        auth.signInWithPopup(provider).then(result => {\n          if(result.user) {\n            const { displayName, photoUrl, uid } = result.user;\n\n            if(!displayName || !photoUrl) {\n              throw new Error('Missing information from google acount.')\n            }\n\n            setUser({\n              id:uid,\n              name:displayName,\n              avatarUrl:photoUrl\n\n            })\n          }\n        })\n  }\n\n  return (\n    <BrowserRouter>\n      <AuthContext.Provider value={{ value, setValue }}>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/rooms/new\" component={NewRoom} />\n      </AuthContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}