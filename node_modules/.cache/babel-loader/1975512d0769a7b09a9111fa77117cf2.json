{"ast":null,"code":"import _slicedToArray from\"C:/Nlw/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from\"react\";import{database}from\"../services/firebase\";import{useAuth}from'../hooks/useAuth';export function useRoom(roomId){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),questions=_useState2[0],setQuestions=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];var _useAuth=useAuth(),user=_useAuth.user;useEffect(function(){var roomRef=database.ref(\"rooms/\".concat(roomId));roomRef.on('value',function(room){var _databaseRoom$questio;var databaseRoom=room.val();var firebaseQuestions=(_databaseRoom$questio=databaseRoom.questions)!==null&&_databaseRoom$questio!==void 0?_databaseRoom$questio:{};var parsedQuestions=Object.entries(firebaseQuestions).map(function(_ref){var _value$likes,_Object$entries$find,_value$likes2;var _ref2=_slicedToArray(_ref,2),key=_ref2[0],value=_ref2[1];return{id:key,content:value.content,author:value.author,isHighlighted:value.isHighlighted,isAnswered:value.isAnswered,likeCount:Object.values((_value$likes=value.likes)!==null&&_value$likes!==void 0?_value$likes:{}).length,likeId:(_Object$entries$find=Object.entries((_value$likes2=value.likes)!==null&&_value$likes2!==void 0?_value$likes2:{}).find(function(_ref3){var _ref4=_slicedToArray(_ref3,2),key=_ref4[0],like=_ref4[1];return like.authorId===(user===null||user===void 0?void 0:user.id);}))===null||_Object$entries$find===void 0?void 0:_Object$entries$find[0]};});setTitle(databaseRoom.title);setQuestions(parsedQuestions);});return function(){roomRef.off('value');};},[roomId,user===null||user===void 0?void 0:user.id]);return{questions:questions,title:title};}","map":{"version":3,"sources":["C:/Nlw/letmeask/src/hooks/useRoom.ts"],"names":["useEffect","useState","database","useAuth","useRoom","roomId","questions","setQuestions","title","setTitle","user","roomRef","ref","on","room","databaseRoom","val","firebaseQuestions","parsedQuestions","Object","entries","map","key","value","id","content","author","isHighlighted","isAnswered","likeCount","values","likes","length","likeId","find","like","authorId","off"],"mappings":"sIAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CACA,OAASC,QAAT,KAAyB,sBAAzB,CACA,OAASC,OAAT,KAAwB,kBAAxB,CA4BA,MAAO,SAASC,CAAAA,OAAT,CAAiBC,MAAjB,CAAiC,eACFJ,QAAQ,CAAiB,EAAjB,CADN,wCAC7BK,SAD6B,eAClBC,YADkB,8BAEVN,QAAQ,CAAC,EAAD,CAFE,yCAE7BO,KAF6B,eAEtBC,QAFsB,4BAGnBN,OAAO,EAHY,CAG5BO,IAH4B,UAG5BA,IAH4B,CAKpCV,SAAS,CAAC,UAAM,CACZ,GAAMW,CAAAA,OAAO,CAAGT,QAAQ,CAACU,GAAT,iBAAsBP,MAAtB,EAAhB,CAEAM,OAAO,CAACE,EAAR,CAAW,OAAX,CAAoB,SAAAC,IAAI,CAAI,2BAC1B,GAAMC,CAAAA,YAAY,CAAGD,IAAI,CAACE,GAAL,EAArB,CACA,GAAMC,CAAAA,iBAAoC,wBAAGF,YAAY,CAACT,SAAhB,+DAA6B,EAAvE,CAEA,GAAMY,CAAAA,eAAe,CAAGC,MAAM,CAACC,OAAP,CAAeH,iBAAf,EAAkCI,GAAlC,CAAsC,cAAkB,sFAAhBC,GAAgB,UAAXC,KAAW,UAC9E,MAAO,CACLC,EAAE,CAAEF,GADC,CAELG,OAAO,CAAEF,KAAK,CAACE,OAFV,CAGLC,MAAM,CAAEH,KAAK,CAACG,MAHT,CAILC,aAAa,CAAEJ,KAAK,CAACI,aAJhB,CAKLC,UAAU,CAAEL,KAAK,CAACK,UALb,CAMLC,SAAS,CAAEV,MAAM,CAACW,MAAP,eAAcP,KAAK,CAACQ,KAApB,6CAA6B,EAA7B,EAAiCC,MANvC,CAOLC,MAAM,uBAAEd,MAAM,CAACC,OAAP,gBAAeG,KAAK,CAACQ,KAArB,+CAA8B,EAA9B,EAAkCG,IAAlC,CAAuC,kDAAEZ,GAAF,UAAOa,IAAP,gBAAiBA,CAAAA,IAAI,CAACC,QAAL,IAAkB1B,IAAlB,SAAkBA,IAAlB,iBAAkBA,IAAI,CAAEc,EAAxB,CAAjB,EAAvC,CAAF,+CAAE,qBAAsF,CAAtF,CAPH,CAAP,CASD,CAVuB,CAAxB,CAYAf,QAAQ,CAACM,YAAY,CAACP,KAAd,CAAR,CACAD,YAAY,CAACW,eAAD,CAAZ,CACD,CAlBD,EAoBA,MAAO,WAAM,CACXP,OAAO,CAAC0B,GAAR,CAAY,OAAZ,EACD,CAFD,CAGD,CA1BM,CA0BJ,CAAChC,MAAD,CAASK,IAAT,SAASA,IAAT,iBAASA,IAAI,CAAEc,EAAf,CA1BI,CAAT,CA4BE,MAAO,CAAClB,SAAS,CAATA,SAAD,CAAYE,KAAK,CAALA,KAAZ,CAAP,CACL","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { database } from \"../services/firebase\";\r\nimport { useAuth } from '../hooks/useAuth';\r\n\r\ntype QuestionType = {\r\n    id: string;\r\n    author: {\r\n      name: string;\r\n      avatar: string;\r\n    }\r\n    content: string;\r\n    isAnswered: boolean;\r\n    isHighlighted: boolean;\r\n    likeCount: number;\r\n    likeId: string | undefined;\r\n  }\r\n\r\ntype FirebaseQuestions = Record<string, {\r\nauthor: {\r\n    name: string;\r\n    avatar: string;\r\n}\r\ncontent: string;\r\nisAnswered: boolean;\r\nisHighlighted: boolean;\r\nlikes: Record<string,{\r\n  authorId: string;\r\n  }>\r\n}>\r\n\r\nexport function useRoom(roomId: string) {\r\n    const [questions, setQuestions] = useState<QuestionType[]>([])\r\n    const [title, setTitle] = useState('');\r\n    const { user } = useAuth();\r\n\r\n    useEffect(() => {\r\n        const roomRef = database.ref(`rooms/${roomId}`);\r\n    \r\n        roomRef.on('value', room => {\r\n          const databaseRoom = room.val();\r\n          const firebaseQuestions: FirebaseQuestions = databaseRoom.questions ?? {};\r\n    \r\n          const parsedQuestions = Object.entries(firebaseQuestions).map(([key, value]) => {\r\n            return {\r\n              id: key,\r\n              content: value.content,\r\n              author: value.author,\r\n              isHighlighted: value.isHighlighted,\r\n              isAnswered: value.isAnswered,\r\n              likeCount: Object.values(value.likes ?? {}).length,\r\n              likeId: Object.entries(value.likes ?? {}).find(([key, like]) => like.authorId === user?.id)?.[0],\r\n            }\r\n          })\r\n    \r\n          setTitle(databaseRoom.title);\r\n          setQuestions(parsedQuestions);\r\n        })\r\n\r\n        return () => {\r\n          roomRef.off('value');\r\n        }\r\n      }, [roomId, user?.id]);\r\n\r\n      return {questions, title }\r\n}"]},"metadata":{},"sourceType":"module"}