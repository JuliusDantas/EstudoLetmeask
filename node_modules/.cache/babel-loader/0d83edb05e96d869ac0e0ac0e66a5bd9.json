{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nlw\\\\letmeask\\\\src\\\\pages\\\\Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/userAuth';\nimport { database } from '../services/firebase';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const parms = useParams();\n  const roomId = parms.id;\n  const [newQuestion, setNewQuestion] = useState('');\n  const {\n    user\n  } = useAuth();\n\n  async function handleSendQuestion(event) {\n    event.preventDefault();\n\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('You must be logged in');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user.name,\n        avatar: user.avatar\n      },\n      isHighlighted: false,\n      isAnswered: false\n    };\n    await database.ref(`rooms/${roomId}/questions`).push(question);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sala React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"4 perguntas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendQuestion,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O qu\\xEA voc\\xEA deseja perguntar?\",\n          onChange: event => setNewQuestion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [user ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.avatar,\n              alt: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a o seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 61\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            disabled: !user,\n            children: \"Enviar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"wKKEHd7HACKn/GEfFzEvRhswzFw=\", false, function () {\n  return [useParams, useAuth];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Nlw/letmeask/src/pages/Room.tsx"],"names":["useState","useParams","Button","RoomCode","useAuth","database","Room","parms","roomId","id","newQuestion","setNewQuestion","user","handleSendQuestion","event","preventDefault","trim","Error","question","content","author","name","avatar","isHighlighted","isAnswered","ref","push","logoImg","target","value"],"mappings":"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","sourcesContent":["import { FormEvent, useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport { Button } from '../components/Button';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useAuth } from '../hooks/userAuth';\r\nimport { database } from '../services/firebase';\r\n\r\nimport '../styles/room.scss'\r\n\r\ntype RoomParms = {\r\n    id: string,\r\n}\r\n\r\nexport function Room(){\r\n    const parms = useParams<RoomParms>();\r\n    const roomId = parms.id;\r\n    const [newQuestion, setNewQuestion] = useState('');\r\n    const {user} = useAuth();\r\n\r\n    async function handleSendQuestion(event: FormEvent) {\r\n        event.preventDefault();\r\n\r\n        if(newQuestion.trim() === '') {\r\n            return;\r\n        }\r\n        if(!user){\r\n            throw new Error ('You must be logged in')\r\n        }\r\n\r\n        const question = {\r\n            content: newQuestion,\r\n            author: {\r\n                name: user.name,\r\n                avatar: user.avatar\r\n            },\r\n            isHighlighted: false,\r\n            isAnswered: false,\r\n        }\r\n\r\n        await database.ref(`rooms/${roomId}/questions`).push(question)\r\n\r\n    }\r\n    \r\n    return(\r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <img src={logoImg} alt=\"Letmeask\" />\r\n                    <RoomCode code={roomId}/>\r\n                    \r\n                </div>\r\n            </header>\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>Sala React</h1>\r\n                    <span>4 perguntas</span>\r\n                </div>\r\n                <form onSubmit={handleSendQuestion}>\r\n                    <textarea \r\n                        placeholder=\"O quê você deseja perguntar?\"\r\n                        onChange={event => setNewQuestion(event.target.value)}\r\n                        value={newQuestion}\r\n                    />\r\n                    <div className=\"form-footer\">\r\n                        { user ? (\r\n                            <div className=\"user-info\">\r\n                                <img src={user.avatar} alt={user.name} />\r\n                            </div>\r\n                        ): (\r\n                            <span>Para enviar uma pergunta, <button>faça o seu login</button></span>\r\n                        )}\r\n                        <Button\r\n                            type=\"submit\"\r\n                            disabled={!user}\r\n                        >\r\n                            Enviar pergunta\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                \r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}