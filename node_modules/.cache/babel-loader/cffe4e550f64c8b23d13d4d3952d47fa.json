{"ast":null,"code":"import _regeneratorRuntime from\"C:/Nlw/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Nlw/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Nlw/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{createContext,useEffect,useState}from'react';import{auth,firebase}from'../services/firebase';import{jsx as _jsx}from\"react/jsx-runtime\";export var AuthContext=/*#__PURE__*/createContext({});export function AuthContextProvider(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),user=_useState2[0],setUser=_useState2[1];useEffect(function(){var unsubscribe=auth.onAuthStateChanged(function(user){if(user){var displayName=user.displayName,photoURL=user.photoURL,uid=user.uid;if(!displayName||!photoURL){throw new Error('Missing information from google acount.');}setUser({id:uid,name:displayName,avatar:photoURL});}});return function(){unsubscribe();};},[]);function signInWhithGoogle(){return _signInWhithGoogle.apply(this,arguments);}function _signInWhithGoogle(){_signInWhithGoogle=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,result,_result$user,displayName,photoURL,uid;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new firebase.auth.GoogleAuthProvider();_context.next=3;return auth.signInWithPopup(provider);case 3:result=_context.sent;if(!result.user){_context.next=9;break;}_result$user=result.user,displayName=_result$user.displayName,photoURL=_result$user.photoURL,uid=_result$user.uid;if(!(!displayName||!photoURL)){_context.next=8;break;}throw new Error('Missing information from google acount.');case 8:setUser({id:uid,name:displayName,avatar:photoURL});case 9:case\"end\":return _context.stop();}}},_callee);}));return _signInWhithGoogle.apply(this,arguments);}return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user:user,signInWhithGoogle:signInWhithGoogle},children:props.children});}","map":{"version":3,"sources":["C:/Nlw/letmeask/src/context/AuthContext.tsx"],"names":["createContext","useEffect","useState","auth","firebase","AuthContext","AuthContextProvider","props","user","setUser","unsubscribe","onAuthStateChanged","displayName","photoURL","uid","Error","id","name","avatar","signInWhithGoogle","provider","GoogleAuthProvider","signInWithPopup","result","children"],"mappings":"+YAAA,OAAQA,aAAR,CAAkCC,SAAlC,CAA6CC,QAA7C,KAA4D,OAA5D,CAEA,OAAQC,IAAR,CAAcC,QAAd,KAA8B,sBAA9B,C,2CAEA,MAAO,IAAMC,CAAAA,WAAW,cAAGL,aAAa,CAAC,EAAD,CAAjC,CAkBP,MAAO,SAASM,CAAAA,mBAAT,CAA6BC,KAA7B,CAA6D,eAC1CL,QAAQ,EADkC,wCAC3DM,IAD2D,eACrDC,OADqD,eAGlER,SAAS,CAAC,UAAM,CACd,GAAMS,CAAAA,WAAW,CAAGP,IAAI,CAACQ,kBAAL,CAAwB,SAAAH,IAAI,CAAE,CAChD,GAAGA,IAAH,CAAQ,IACEI,CAAAA,WADF,CACiCJ,IADjC,CACEI,WADF,CACeC,QADf,CACiCL,IADjC,CACeK,QADf,CACyBC,GADzB,CACiCN,IADjC,CACyBM,GADzB,CAGJ,GAAG,CAACF,WAAD,EAAgB,CAACC,QAApB,CAA8B,CAC5B,KAAM,IAAIE,CAAAA,KAAJ,CAAU,yCAAV,CAAN,CACD,CAEDN,OAAO,CAAC,CACNO,EAAE,CAAEF,GADE,CAENG,IAAI,CAAEL,WAFA,CAGNM,MAAM,CAAEL,QAHF,CAAD,CAAP,CAMH,CACF,CAfmB,CAApB,CAiBA,MAAO,WAAM,CACXH,WAAW,GACZ,CAFD,CAGD,CArBQ,CAqBN,EArBM,CAAT,CAHkE,QA0BnDS,CAAAA,iBA1BmD,6JA0BlE,6LACYC,QADZ,CACuB,GAAIhB,CAAAA,QAAQ,CAACD,IAAT,CAAckB,kBAAlB,EADvB,uBAG2BlB,CAAAA,IAAI,CAACmB,eAAL,CAAqBF,QAArB,CAH3B,QAGYG,MAHZ,mBAMSA,MAAM,CAACf,IANhB,sCAO+Ce,MAAM,CAACf,IAPtD,CAOgBI,WAPhB,cAOgBA,WAPhB,CAO6BC,QAP7B,cAO6BA,QAP7B,CAOuCC,GAPvC,cAOuCA,GAPvC,MASW,CAACF,WAAD,EAAgB,CAACC,QAT5B,+BAUgB,IAAIE,CAAAA,KAAJ,CAAU,yCAAV,CAVhB,QAaQN,OAAO,CAAC,CACNO,EAAE,CAAEF,GADE,CAENG,IAAI,CAAEL,WAFA,CAGNM,MAAM,CAAEL,QAHF,CAAD,CAAP,CAbR,sDA1BkE,oDAgDhE,mBACI,KAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAE,CAAEL,IAAI,CAAJA,IAAF,CAAQW,iBAAiB,CAAjBA,iBAAR,CAA7B,UACKZ,KAAK,CAACiB,QADX,EADJ,CAKH","sourcesContent":["import {createContext, ReactNode, useEffect, useState} from 'react';\r\n\r\nimport {auth, firebase } from '../services/firebase'\r\n\r\nexport const AuthContext = createContext({} as AuthContextType);\r\n\r\ntype User = {\r\n    id: string;\r\n    name: string;\r\n    avatar: string;\r\n  }\r\n  \r\n  type AuthContextType = {\r\n    user: User | undefined;\r\n    signInWhithGoogle: () => Promise<void>;\r\n  }\r\n\r\n  type AuthContextProviderProps = {\r\n      children: ReactNode;\r\n  }\r\n\r\n  \r\nexport function AuthContextProvider(props: AuthContextProviderProps){\r\n  const [user, setUser] = useState<User>();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user=>{\r\n      if(user){\r\n        const { displayName, photoURL, uid } = user;\r\n\r\n          if(!displayName || !photoURL) {\r\n            throw new Error('Missing information from google acount.')\r\n          }\r\n\r\n          setUser({\r\n            id: uid,\r\n            name: displayName,\r\n            avatar: photoURL\r\n\r\n          })\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    }\r\n  }, [])\r\n\r\n  async function signInWhithGoogle() {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        const result = await auth.signInWithPopup(provider);\r\n\r\n      \r\n        if(result.user) {\r\n          const { displayName, photoURL, uid } = result.user;\r\n\r\n          if(!displayName || !photoURL) {\r\n            throw new Error('Missing information from google acount.')\r\n          }\r\n\r\n          setUser({\r\n            id: uid,\r\n            name: displayName,\r\n            avatar: photoURL\r\n\r\n          })\r\n        }\r\n        \r\n  }\r\n    return (\r\n        <AuthContext.Provider value={{ user, signInWhithGoogle }}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}