{"ast":null,"code":"import _regeneratorRuntime from\"C:/Nlw/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Nlw/letmeask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{useHistory,useParams}from'react-router-dom';import logoImg from\"../assets/images/logo.svg\";import deleteImg from\"../assets/images/delete.svg\";import checkImg from\"../assets/images/check.svg\";import answerImg from\"../assets/images/answer.svg\";import{Button}from'../components/Button';import{Question}from'../components/Question';import{RoomCode}from'../components/RoomCode';// import { useAuth } from '../hooks/useAuth';\nimport{useRoom}from'../hooks/useRoom';import'../styles/room.scss';import{database}from'../services/firebase';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export function AdminRoom(){// const { user } = useAuth();\nvar history=useHistory();var params=useParams();var roomId=params.id;var _useRoom=useRoom(roomId),title=_useRoom.title,questions=_useRoom.questions;function handleEndRoom(){return _handleEndRoom.apply(this,arguments);}function _handleEndRoom(){_handleEndRoom=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return database.ref(\"rooms/\".concat(roomId)).update({endedAt:new Date()});case 2:history.push('/');case 3:case\"end\":return _context.stop();}}},_callee);}));return _handleEndRoom.apply(this,arguments);}function handleDeleteQuestion(_x){return _handleDeleteQuestion.apply(this,arguments);}function _handleDeleteQuestion(){_handleDeleteQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(questionId){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!window.confirm('Tem certeza que você deseja excluir esta pergunta?')){_context2.next=3;break;}_context2.next=3;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).remove();case 3:case\"end\":return _context2.stop();}}},_callee2);}));return _handleDeleteQuestion.apply(this,arguments);}function handleCheckQuestionAsAnswered(_x2){return _handleCheckQuestionAsAnswered.apply(this,arguments);}function _handleCheckQuestionAsAnswered(){_handleCheckQuestionAsAnswered=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(questionId){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isAnswered:true});case 2:case\"end\":return _context3.stop();}}},_callee3);}));return _handleCheckQuestionAsAnswered.apply(this,arguments);}function handleHighlightQuestion(_x3){return _handleHighlightQuestion.apply(this,arguments);}function _handleHighlightQuestion(){_handleHighlightQuestion=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(questionId){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return database.ref(\"rooms/\".concat(roomId,\"/questions/\").concat(questionId)).update({isHighlighted:true});case 2:case\"end\":return _context4.stop();}}},_callee4);}));return _handleHighlightQuestion.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{id:\"page-room\",children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(\"img\",{src:logoImg,alt:\"Letmeask\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(RoomCode,{code:roomId}),/*#__PURE__*/_jsx(Button,{isOutlined:true,onClick:handleEndRoom,children:\"Encerrar Sala\"})]})]})}),/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"room-title\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[\"Sala \",title]}),questions.length>0&&/*#__PURE__*/_jsxs(\"span\",{children:[questions.length,\" pergunta(s)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"question-list\",children:questions.map(function(question){return/*#__PURE__*/_jsxs(Question,{content:question.content,author:question.author,isAnswered:question.isAnswered,isHighlighted:question.isHighlighted,children:[!question.isAnswered&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleCheckQuestionAsAnswered(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:checkImg,alt:\"marcar pergunta como respondida\"})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleHighlightQuestion(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:answerImg,alt:\"Dar destaque \\xE0 pergunta\"})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:function onClick(){return handleDeleteQuestion(question.id);},children:/*#__PURE__*/_jsx(\"img\",{src:deleteImg,alt:\"Delete ask\"})})]},question.id);})})]})]});}","map":{"version":3,"sources":["C:/Nlw/letmeask/src/pages/AdminRoom.tsx"],"names":["useHistory","useParams","Button","Question","RoomCode","useRoom","database","AdminRoom","history","params","roomId","id","title","questions","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","window","confirm","remove","handleCheckQuestionAsAnswered","isAnswered","handleHighlightQuestion","isHighlighted","logoImg","length","map","question","content","author","checkImg","answerImg","deleteImg"],"mappings":"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","sourcesContent":["import { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport deleteImg from '../assets/images/delete.svg';\r\nimport checkImg from '../assets/images/check.svg';\r\nimport answerImg from '../assets/images/answer.svg';\r\n\r\nimport { Button } from '../components/Button';\r\nimport { Question } from '../components/Question';\r\nimport { RoomCode } from '../components/RoomCode';\r\n// import { useAuth } from '../hooks/useAuth';\r\nimport { useRoom } from '../hooks/useRoom';\r\n\r\nimport '../styles/room.scss';\r\nimport { database } from '../services/firebase';\r\n\r\ntype RoomParams = {\r\n  id: string;\r\n}\r\n\r\nexport function AdminRoom() {\r\n  // const { user } = useAuth();\r\n  const history = useHistory();\r\n  const params = useParams<RoomParams>();\r\n  const roomId = params.id;\r\n  const {title, questions} = useRoom(roomId)\r\n\r\n  async function handleEndRoom() {\r\n    await database.ref(`rooms/${roomId}`).update({\r\n      endedAt: new Date(),\r\n    })\r\n\r\n    history.push('/');\r\n  }\r\n\r\n  async function handleDeleteQuestion(questionId: string) {\r\n    if(window.confirm('Tem certeza que você deseja excluir esta pergunta?')){\r\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\r\n    }\r\n  }\r\n\r\n  async function handleCheckQuestionAsAnswered(questionId: string) {\r\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n      isAnswered: true,\r\n    });\r\n  }\r\n\r\n  async function handleHighlightQuestion(questionId: string) {\r\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n      isHighlighted: true,\r\n    });\r\n  }\r\n  \r\n    \r\n  return (\r\n    <div id=\"page-room\">\r\n      <header>\r\n        <div className=\"content\">\r\n          <img src={logoImg} alt=\"Letmeask\" />\r\n          <div>\r\n            <RoomCode code={roomId} />\r\n            <Button \r\n              isOutlined\r\n              onClick={handleEndRoom}\r\n            >Encerrar Sala</Button>\r\n          </div>\r\n\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"room-title\">\r\n          <h1>Sala {title}</h1>\r\n          { questions.length > 0 && <span>{questions.length} pergunta(s)</span> }\r\n        </div>\r\n\r\n        \r\n        <div className=\"question-list\">\r\n          {questions.map(question => {\r\n              return(\r\n                  <Question \r\n                      key={question.id}\r\n                      content={question.content}\r\n                      author={question.author}\r\n                      isAnswered={question.isAnswered}\r\n                      isHighlighted={question.isHighlighted}\r\n                  >\r\n                    {!question.isAnswered && (\r\n                        <>\r\n                          <button\r\n                          type=\"button\"\r\n                          onClick={() => handleCheckQuestionAsAnswered(question.id)}\r\n                          >\r\n                            <img src={checkImg} alt=\"marcar pergunta como respondida\" />\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => handleHighlightQuestion(question.id)}\r\n                          >\r\n                            <img src={answerImg} alt=\"Dar destaque à pergunta\" />\r\n                          </button>\r\n                        </>\r\n                    )}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleDeleteQuestion(question.id)}\r\n                    >\r\n                      <img src={deleteImg} alt=\"Delete ask\" />\r\n                    </button>\r\n                  </Question>\r\n              )\r\n          })}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}