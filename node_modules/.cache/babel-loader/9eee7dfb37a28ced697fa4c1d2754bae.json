{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nlw\\\\letmeask\\\\src\\\\pages\\\\Room.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport { Button } from '../components/Button';\nimport { RoomCode } from '../components/RoomCode';\nimport { useAuth } from '../hooks/userAuth';\nimport '../styles/room.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Room() {\n  _s();\n\n  const parms = useParams();\n  const roomId = parms.id;\n  const [newQuestion, setNewQuestion] = useState('');\n  const {\n    user\n  } = useAuth();\n\n  async function handleSendQuestion() {\n    if (newQuestion.trim() === '') {\n      return;\n    }\n\n    if (!user) {\n      throw new Error('You must be logged in');\n    }\n\n    const question = {\n      content: newQuestion,\n      author: {\n        name: user.name,\n        avatar: user.avatar\n      }\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(RoomCode, {\n          code: roomId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sala React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"4 perguntas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"O qu\\xEA voc\\xEA deseja perguntar?\",\n          onChange: event => setNewQuestion(event.target.value),\n          value: newQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Para enviar uma pergunta, \", /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"fa\\xE7a o seu login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Enviar pergunta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Room, \"wKKEHd7HACKn/GEfFzEvRhswzFw=\", false, function () {\n  return [useParams, useAuth];\n});\n\n_c = Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["C:/Nlw/letmeask/src/pages/Room.tsx"],"names":["useState","useParams","Button","RoomCode","useAuth","Room","parms","roomId","id","newQuestion","setNewQuestion","user","handleSendQuestion","trim","Error","question","content","author","name","avatar","logoImg","event","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,OAAO,qBAAP;;AAMA,OAAO,SAASC,IAAT,GAAe;AAAA;;AAClB,QAAMC,KAAK,GAAGL,SAAS,EAAvB;AACA,QAAMM,MAAM,GAAGD,KAAK,CAACE,EAArB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAACW,IAAAA;AAAD,MAASP,OAAO,EAAtB;;AAEA,iBAAeQ,kBAAf,GAAoC;AAChC,QAAGH,WAAW,CAACI,IAAZ,OAAuB,EAA1B,EAA8B;AAC1B;AACH;;AACD,QAAG,CAACF,IAAJ,EAAS;AACL,YAAM,IAAIG,KAAJ,CAAW,uBAAX,CAAN;AACH;;AAED,UAAMC,QAAQ,GAAG;AACbC,MAAAA,OAAO,EAAEP,WADI;AAEbQ,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAEP,IAAI,CAACO,IADP;AAEJC,QAAAA,MAAM,EAAER,IAAI,CAACQ;AAFT;AAFK,KAAjB;AAQH;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEC,OAAV;AAAmB,UAAA,GAAG,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAEb;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,gCACI;AACI,UAAA,WAAW,EAAC,oCADhB;AAEI,UAAA,QAAQ,EAAEc,KAAK,IAAIX,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAFrC;AAGI,UAAA,KAAK,EAAEd;AAHX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAA,kEAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AACI,YAAA,IAAI,EAAC,QADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH;;GA1DeJ,I;UACEJ,S,EAGCG,O;;;KAJHC,I","sourcesContent":["import { useState } from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport { Button } from '../components/Button';\r\nimport { RoomCode } from '../components/RoomCode';\r\nimport { useAuth } from '../hooks/userAuth';\r\n\r\nimport '../styles/room.scss'\r\n\r\ntype RoomParms = {\r\n    id: string,\r\n}\r\n\r\nexport function Room(){\r\n    const parms = useParams<RoomParms>();\r\n    const roomId = parms.id;\r\n    const [newQuestion, setNewQuestion] = useState('');\r\n    const {user} = useAuth();\r\n\r\n    async function handleSendQuestion() {\r\n        if(newQuestion.trim() === '') {\r\n            return;\r\n        }\r\n        if(!user){\r\n            throw new Error ('You must be logged in')\r\n        }\r\n\r\n        const question = {\r\n            content: newQuestion,\r\n            author: {\r\n                name: user.name,\r\n                avatar: user.avatar\r\n            }\r\n        }\r\n\r\n    }\r\n    \r\n    return(\r\n        <div id=\"page-room\">\r\n            <header>\r\n                <div className=\"content\">\r\n                    <img src={logoImg} alt=\"Letmeask\" />\r\n                    <RoomCode code={roomId}/>\r\n                    \r\n                </div>\r\n            </header>\r\n            <main>\r\n                <div className=\"room-title\">\r\n                    <h1>Sala React</h1>\r\n                    <span>4 perguntas</span>\r\n                </div>\r\n                <form>\r\n                    <textarea \r\n                        placeholder=\"O quê você deseja perguntar?\"\r\n                        onChange={event => setNewQuestion(event.target.value)}\r\n                        value={newQuestion}\r\n                    />\r\n                    <div className=\"form-footer\">\r\n                        <span>Para enviar uma pergunta, <button>faça o seu login</button></span>\r\n                        <Button\r\n                            type=\"submit\"\r\n                        >\r\n                            Enviar pergunta\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n                \r\n                \r\n            </main>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}