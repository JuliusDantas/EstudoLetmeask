{"ast":null,"code":"var _jsxFileName = \"C:\\\\Nlw\\\\letmeask\\\\src\\\\pages\\\\AdminRoom.tsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory, useParams } from 'react-router-dom';\nimport logoImg from \"../assets/images/logo.svg\";\nimport deleteImg from \"../assets/images/delete.svg\";\nimport checkImg from \"../assets/images/check.svg\";\nimport answerImg from \"../assets/images/answer.svg\";\nimport { Button } from '../components/Button';\nimport { Question } from '../components/Question';\nimport { RoomCode } from '../components/RoomCode'; // import { useAuth } from '../hooks/useAuth';\n\nimport { useRoom } from '../hooks/useRoom';\nimport '../styles/room.scss';\nimport { database } from '../services/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function AdminRoom() {\n  _s();\n\n  // const { user } = useAuth();\n  const history = useHistory();\n  const params = useParams();\n  const roomId = params.id;\n  const {\n    title,\n    questions\n  } = useRoom(roomId);\n\n  async function handleEndRoom() {\n    await database.ref(`rooms/${roomId}`).update({\n      endedAt: new Date()\n    });\n    history.push('/');\n  }\n\n  async function handleDeleteQuestion(questionId) {\n    if (window.confirm('Tem certeza que vocÃª deseja excluir esta pergunta?')) {\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\n    }\n  }\n\n  async function handleCheckQuestionAsAnswered(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isAnswered: true\n    });\n  }\n\n  async function handleHighlightQuestion(questionId) {\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\n      isHighlighted: true\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-room\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoImg,\n          alt: \"Letmeask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(RoomCode, {\n            code: roomId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            isOutlined: true,\n            onClick: handleEndRoom,\n            children: \"Encerrar Sala\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Sala \", title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), questions.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [questions.length, \" pergunta(s)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-list\",\n        children: questions.map(question => {\n          return /*#__PURE__*/_jsxDEV(Question, {\n            content: question.content,\n            author: question.author,\n            isAnswered: question.isAnswered,\n            isHighlighted: question.isHighlighted,\n            children: [!question.isAnswered && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleCheckQuestionAsAnswered(question.id),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: checkImg,\n                  alt: \"marcar pergunta como respondida\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => handleHighlightQuestion(question.id),\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: answerImg,\n                  alt: \"Dar destaque \\xE0 pergunta\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => handleDeleteQuestion(question.id),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: deleteImg,\n                alt: \"Delete ask\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)]\n          }, question.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminRoom, \"DGpp73nE6Vv7q4CkADF/6LFdnI4=\", false, function () {\n  return [useHistory, useParams, useRoom];\n});\n\n_c = AdminRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminRoom\");","map":{"version":3,"sources":["C:/Nlw/letmeask/src/pages/AdminRoom.tsx"],"names":["useHistory","useParams","Button","Question","RoomCode","useRoom","database","AdminRoom","history","params","roomId","id","title","questions","handleEndRoom","ref","update","endedAt","Date","push","handleDeleteQuestion","questionId","window","confirm","remove","handleCheckQuestionAsAnswered","isAnswered","handleHighlightQuestion","isHighlighted","logoImg","length","map","question","content","author","checkImg","answerImg","deleteImg"],"mappings":"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","sourcesContent":["import { useHistory, useParams } from 'react-router-dom'\r\n\r\nimport logoImg from '../assets/images/logo.svg';\r\nimport deleteImg from '../assets/images/delete.svg';\r\nimport checkImg from '../assets/images/check.svg';\r\nimport answerImg from '../assets/images/answer.svg';\r\n\r\nimport { Button } from '../components/Button';\r\nimport { Question } from '../components/Question';\r\nimport { RoomCode } from '../components/RoomCode';\r\n// import { useAuth } from '../hooks/useAuth';\r\nimport { useRoom } from '../hooks/useRoom';\r\n\r\nimport '../styles/room.scss';\r\nimport { database } from '../services/firebase';\r\n\r\ntype RoomParams = {\r\n  id: string;\r\n}\r\n\r\nexport function AdminRoom() {\r\n  // const { user } = useAuth();\r\n  const history = useHistory();\r\n  const params = useParams<RoomParams>();\r\n  const roomId = params.id;\r\n  const {title, questions} = useRoom(roomId)\r\n\r\n  async function handleEndRoom() {\r\n    await database.ref(`rooms/${roomId}`).update({\r\n      endedAt: new Date(),\r\n    })\r\n\r\n    history.push('/');\r\n  }\r\n\r\n  async function handleDeleteQuestion(questionId: string) {\r\n    if(window.confirm('Tem certeza que vocÃª deseja excluir esta pergunta?')){\r\n      await database.ref(`rooms/${roomId}/questions/${questionId}`).remove();\r\n    }\r\n  }\r\n\r\n  async function handleCheckQuestionAsAnswered(questionId: string) {\r\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n      isAnswered: true,\r\n    });\r\n  }\r\n\r\n  async function handleHighlightQuestion(questionId: string) {\r\n    await database.ref(`rooms/${roomId}/questions/${questionId}`).update({\r\n      isHighlighted: true,\r\n    });\r\n  }\r\n  \r\n    \r\n  return (\r\n    <div id=\"page-room\">\r\n      <header>\r\n        <div className=\"content\">\r\n          <img src={logoImg} alt=\"Letmeask\" />\r\n          <div>\r\n            <RoomCode code={roomId} />\r\n            <Button \r\n              isOutlined\r\n              onClick={handleEndRoom}\r\n            >Encerrar Sala</Button>\r\n          </div>\r\n\r\n        </div>\r\n      </header>\r\n\r\n      <main>\r\n        <div className=\"room-title\">\r\n          <h1>Sala {title}</h1>\r\n          { questions.length > 0 && <span>{questions.length} pergunta(s)</span> }\r\n        </div>\r\n\r\n        \r\n        <div className=\"question-list\">\r\n          {questions.map(question => {\r\n              return(\r\n                  <Question \r\n                      key={question.id}\r\n                      content={question.content}\r\n                      author={question.author}\r\n                      isAnswered={question.isAnswered}\r\n                      isHighlighted={question.isHighlighted}\r\n                  >\r\n                    {!question.isAnswered && (\r\n                        <>\r\n                          <button\r\n                          type=\"button\"\r\n                          onClick={() => handleCheckQuestionAsAnswered(question.id)}\r\n                          >\r\n                            <img src={checkImg} alt=\"marcar pergunta como respondida\" />\r\n                          </button>\r\n                          <button\r\n                            type=\"button\"\r\n                            onClick={() => handleHighlightQuestion(question.id)}\r\n                          >\r\n                            <img src={answerImg} alt=\"Dar destaque Ã  pergunta\" />\r\n                          </button>\r\n                        </>\r\n                    )}\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => handleDeleteQuestion(question.id)}\r\n                    >\r\n                      <img src={deleteImg} alt=\"Delete ask\" />\r\n                    </button>\r\n                  </Question>\r\n              )\r\n          })}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}